body {
  margin: 0;
  font-size: 2rem;
  text-align: center;
}

.container1 {
  background-color: antiquewhite;
  display: flex;
  /*! Elemanların diziliş yönü : column, row, row-reverse, column-reverse*/
  flex-direction: row;

  /*? sıkıştırma veya alt satıra geçebilme:flex-wrap: wrap, nowrap, wrap-reverse*/
  flex-wrap: wrap;

  /*! Yatay Hizalama: Justify-center
  /** flex-start, flex-end,center, space-around,space-evenly, space-between */
  justify-content: space-around;
}

.container1 div {
  width: 5rem;
  height: 5rem;
  background-color: tomato;
  margin: 1rem;
  /* margin: 1rem auto;*/
}

.container2 {
  height: 20rem;
  background-color: pink;
  display: flex;
  flex-wrap: nowrap;
  justify-content: center;

  /*! Dikey Hizalama => align-items
  /**  flex-start, flex-end,center, stretch,baseline */
  align-items: stretch;
}

/** bir child element stretch ile container'ın sınırlarına dayandığında child'in içerisindeki içeriği (Örn yazı) yine dikey olarak ortaya hizalamak için nested flex yapısı kullanılabilir*/

.container2 div {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: cornflowerblue;
  width: 5rem;
  margin: 0 1rem;
}

ul {
  height: 30rem;
  background-color: darkgray;
  list-style-type: none;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;

  /*?gap, flex içerisindeki elemanların dikey ve yatay boşluklarını belirlemek için kullanılabilir. ilk yazılan yatay (satırlar arası) boşluk, 2. yazılan ise dikey (sutunlar arası) boşluktur */
  gap: 6rem 2rem;

  /*!Çok satırlı verilerin dikeyde hizanmalmas için kullanılır.*/
  align-content: flex-start;
  /* align-items: flex-start; */
}
ul li {
  width: 4rem;
  height: 4rem;
  background-color: violet;
  /* margin: 1rem; */
}

.container3 {
  background-color: rgb(235, 37, 70);
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.container3 div {
  align-items: center;
  justify-content: center;
  background-color: rgb(100, 237, 100);
  width: 5rem;
  margin: 1rem 1rem;
  /*? tüm div'lerin büyüme oranına 1 verdik. classindakiler diğerlerine göre 2 kat daha fazla büyüyebilir.*/
  flex-grow: 1;
}

div.grow2 {
  /*? grow2 classindakiler diğerlerine göre 2 kat daha fazla büyüyebilir.*/
  flex-grow: 2;
}
div.grow3 {
  /*? grow3 classindakiler diğerlerine göre 3 kat daha fazla büyüyebilir.*/
  flex-grow: 3;
}
div.nogrow {
  /*? nogrow classindakiler diğerlerine göre hiç büyümezler*/
  flex-grow: 0;
}
